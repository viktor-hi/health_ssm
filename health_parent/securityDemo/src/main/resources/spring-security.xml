<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

    <!--url拦截规则配置
    auto-config:自动配置，创建登录页面，自动处理登录请求，密码匹配。。
    use-expressions：true：使用spel表达 hasAnyRole hasAny。。。
                     false：不使用表达式，必须使用ROLE_打头，ROLE_ADMIN,否则启动时会报错
    -->
    <bean id="springSecurityUserService" class="cn.chen.securitydemo.SpringSecurityUserService"></bean>
    <security:http pattern="/page/login.html" security="none"/>
    <security:http auto-config="true" use-expressions="false">
        <!--intercept-url拦截url
            patten：匹配url格式 /**所有的请求
            access：标定的权限，使用角色名
        -->

        <security:intercept-url pattern="/**" access="ROLE_ADMIN"/>
        <security:form-login login-page="/page/login.html"
                             username-parameter="username"
                             password-parameter="password"
                             login-processing-url="/login.do"
                             authentication-failure-url="/page/fail.html"
                             authentication-success-forward-url="/page/success.html"/>
        <security:csrf disabled="true"/>
        <!--配置退出登录-->
        <security:logout logout-url="/logout.do" logout-success-url="/page/login.html" invalidate-session="true"/>
    </security:http>

    <!--认证管理器-->
    <security:authentication-manager>
        <!--认证信息的提供者-->
        <security:authentication-provider user-service-ref="springSecurityUserService">
<!--            <security:user-service>-->
<!--                <security:user name="admin" authorities="ROLE_ADMIN" password="{noop}admin"/>-->
<!--            </security:user-service>-->
        </security:authentication-provider>
    </security:authentication-manager>
</beans>